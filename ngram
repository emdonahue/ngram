#!/bin/zsh

#TODO help print
#TODO reset ngrams after newlines to allow for per-document ngrams

set -o errexit
set -o pipefail
if [[ "${TRACE-0}" == "1" ]]; then set -o xtrace; fi

unset c #Reserved inline comment variable

zparseopts -A opts -F -D h=HELP ${c#; Prints this help menu}\
	   l:=LEFTPAD ${c#LEFTPADDING; Amount of left padding at the beginning of lines}\
	   n:=N ${c#N; N of ngram}\
	   p:=PADCHAR ${c#PADCHAR; Character to use for padding. Defaults to _}\
	   r:=RIGHTPAD ${c#RIGHTPADDING; Amount of right padding at the end of lines}\
	   s:=SKIPLEN ${c#SKIPLEN; Enables skipgrams of skip length SKIPLEN}

if [[ "${#HELP}" -eq 1 ]]; then
    echo 'help nyi'
    exit
fi

awk -vN=2 -vSKIP=1 -f - <<'EOF'
BEGIN {split("a,b,c,d,e",words,",");  delete gram; print_ngram(1)} 
function print_ngram(st, i) { 
	 print "st",st,"gram",length(gram)
	 if (st>length(words)) return;
	 if (length(gram)==N){
	    print_it();
	    return;
	 }
	 gram[length(gram)+1]=words[st];
	 print_ngram(st+1);
	 delete gram[length(gram)];
	 print_ngram(st+1)
	 

}
function print_it() {
	  print gram[1]" "gram[2]"\n"
}
EOF

exit
awk -vRS='[[:space:][:cntrl:]]+' -vN="${N[2]:-1}" -vSKIP="${SKIPLEN[2]:-0}" -vPADC="${PADCHAR[2]:-_}" -vL="${LEFTPAD[2]:-0}" -vR="${RIGHTPAD[2]:-0}" -f <(cat <<'EOF'
BEGIN {left_pad()} 
$0 {add_word($0); print_ngram()} 
"\n"==RT {right_pad(); delete words; left_pad()} 
function add_word(w, i){
	 for (i=N+SKIP; 1<i; i--){
	     words[i-1]=words[i]}; 
	     words[N+SKIP]=w} 
function left_pad( i){
	 for (i=0;i<L;i++){
	     add_word(PADC)}} 
function right_pad( i){
	 for (i=0;i<R;i++){
	     add_word(PADC); 
	     print_ngram()}}
function print_ngram( i){
	 for (i=1;i<=N+SKIP && words[i];i++){
	     printf("%s%s",words[i],N+SKIP==i?"\n":" ")}}
EOF
) "${1:--}"
